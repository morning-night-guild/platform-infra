name: manifest update
run-name: ${{ github.ref_name }} by @${{ github.actor }} ${{ github.workflow }}
on:
  repository_dispatch:
    types:
      - manifest-update
env:
  TAG: ${{ github.event.client_payload.tag }}
  BRANCH_NAME: release/${{ github.event.client_payload.tag }}
jobs:
  update:
    runs-on: ubuntu-22.04
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.BOT_GITHUB_APP_ID }}
          private_key: ${{ secrets.BOT_GITHUB_APP_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate-token.outputs.token }}
      - name: Update manifest
        run: |
          yq '.image.tag=env(TAG)' charts/app-api/values.yaml > charts/app-api/values.yaml.tmp && mv charts/app-api/values.yaml.tmp charts/app-api/values.yaml;
          yq '.image.tag=env(TAG)' charts/app-core/values.yaml > charts/app-core/values.yaml.tmp && mv charts/app-core/values.yaml.tmp charts/app-core/values.yaml;
          yq '.image.tag=env(TAG)' charts/database/values.yaml > charts/database/values.yaml.tmp && mv charts/database/values.yaml.tmp charts/database/values.yaml;
      - name: Checkout branch
        run: |
          git branch ${{ env.BRANCH_NAME }}
          git checkout ${{ env.BRANCH_NAME }}
      - name: Git push
        run: |
          git config --global credential.helper 'github-apps -privatekey ${{ secrets.BOT_GITHUB_APP_PRIVATE_KEY }} -appid ${{ secrets.BOT_GITHUB_APP_ID }} -login ${{ github.repository_owner }}'
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "update image tag ${{ github.event.client_payload.tag }}"
          git push --set-upstream origin ${{ env.BRANCH_NAME }}
      - name: Create release pr
        id: create-release-pr
        run: |
          export GH_TOKEN=${{ steps.generate-token.outputs.token }}
          body="Releases: [${{ github.event.client_payload.tag }}](https://github.com/morning-night-guild/platform-app/releases/tag/${{ github.event.client_payload.tag }})"
          url=$(gh pr create --base main --title "Release ${{ github.event.client_payload.tag }}" --body "${body}" --label release)
          echo "url=${url}" >> $GITHUB_OUTPUT
      - name: Notice slack
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{\"text\": \"<!channel>\n\nリリース<${{ steps.create-release-pr.outputs.url }}|PR>が作成されたよ♪\n\nReleases: <https://github.com/morning-night-guild/platform-app/releases/tag/${{ github.event.client_payload.tag }}|${{ github.event.client_payload.tag }}>\"}" ${{ secrets.SLACK_WEBHOOKS_URL_GITHUB }}
